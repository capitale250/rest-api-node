import {skillsModel} from '../modules/models.js'
import cloudinary from 'cloudinary';
// import { file } from 'tmp';
cloudinary.config({
    cloud_name: 'djf1tigyw', 
    api_key: '117152564788648', 
    api_secret: 'OvWS3KxSzfQ-E8L5LA1GgQfd9Sc'
}); 


export class Skills{
    // list skills
    static createSkills(req, res) {

        const file = req.file
        console.log(req.body.title)
        if (!file) {
            const error = new Error('Please upload a file')
            error.httpStatusCode = 400
            return next(error)
        }
        // const file = req.file
        // console.log(file)
        // const tagname=req.files.FormFieldName 
        // cloudinary.v2.uploader.upload(file, { tags:tagname }, function (err, image) {
        //     console.log();
        //     console.log("** File Upload");
        //     if (err) { console.warn(err); }
        //     console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
        //     console.log("* " + image.public_id);
        //     console.log("* " + image.url);
        //     waitForAllUploads("pizza", err, image);
        //   });
        skillsModel.findOne({Title : req.body.title},function(skill){
            if(skill){
                const error = new Error('skill arleady exit  a file')
                error.httpStatusCode = 400
                return next(error)
            }else{

    
             
                skillsModel.create({
                Title : req.body.title,
                SkillImage : '/images/skills/' + file.filename,
                //Description : 'A portfolio website where i can meet with my clients',
                SkillDate: new Date()
                }, 
                function(err, skill) {
                    if (err){
                        res.json(parserError(err));
                    }else{
                        res.json(skill)
                        //console.log('skills created')
                    }   
                }
            );
}
})
            }

    static getSkills(req, res) {
        var id = req.query.id
        if (id) {
            skillsModel.findById(id, (err, skillsData) =>{
                if(err){
                    res.send(err)
                }
                res.json(skillsData)
            })
        }else{
            skillsModel.find(function(err, skills) {
                if (err)
                    res.send(err)
                res.json(skills);
                console.log('projects returned')
            });
        }
    }
}
